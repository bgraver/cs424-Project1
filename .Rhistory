data$new_date <- as.character(0)
data$new_date <- sapply(data$litterTimestamp, first_word)
data$new_time <- sapply(data$litterTimestamp, second_word)
# data$dotw <- weekdays(as.Date(data$new_date))
data$dotw <- wday(data$new_date, label=TRUE, abbr=FALSE)
head(data)
str(data)
sub <- subset(data, lat > 41.85589 & lat < 41.889 & lon < -87.814 & lon > -87.839)
str(sub)
nrow(sub)
data.table <- as.data.frame(table(data$username))
order.username <- order(data.table$Freq,  decreasing=TRUE)
data.table <- data.table[order.username, ]
colnames(data.table) <- c("Usernames", "Count")
data.table
# table of total number of litter
# ggplot2 bar chart by weekday
data.dotw <- as.data.frame(table(data$dotw))
# order.dotw <- order(data.dotw$Freq, decreasing=TRUE)
# data.dotw <- data.dotw[order.dotw, ]
colnames(data.dotw) <- c("Day of the Week", "Count")
data.dotw
ggplot(data, aes(x=dotw, y="Count")) + geom_bar(stat="identity")
# g <- ggplot(data, aes(dotw))
# g + geom_bar(fill="#0072B2")
# ---------------------------------------------------------------------
# filling_usernames <- function(data) {
#   if (sum(data$username == "")) {
#     for(i in 1:length(data$username))
#     {
#       if (data[i, 10] == "") {
#         data[i, 10] <- paste("unidentified-user-", i)
#       }
#     }
#   }
#   return (data)
# }
#
#
# test_data <- filling_usernames(test_data)
#
# data <- data[complete.cases(data[,5]), ]
# data <- data[rowSums(is.na(data[, 5:6])) == 0, ]
first_word <- function(my.string) {
unlist(strsplit(my.string, ' '))[1]
}
second_word <- function(my.string) {
unlist(strsplit(my.string, ' '))[2]
}
str(data[['tags']])
summary(data[,5:6])
# median: lat = 41.87, lon = -87.81
#
# str(data)
# data$username <-
sum(data$username == "")
sum(data$tags == "")
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
setwd("~/School Folders/cs424/project_1")
data = read.csv("proj_1_raw.csv", header=TRUE, dec=',')
library(leaflet)
library(shiny)
library(lubridate)
library(DT)
library(ggplot2)
# runExample("01_hello")
# setwd('School Folders/cs424/project_1')
# dir()
# write.csv(data, "fin_data.csv")
data = read.csv("proj_1_raw.csv", header=TRUE, dec=',')
str(data)
data$lat <- as.numeric(as.character(data$lat))
data$lon <- as.numeric(as.character(data$lon))
data$tags <- sub("", "untagged", data$tags) # convert to char
data$litterTimestamp <- as.character(data$litterTimestamp) # convert to char
dt_utc <- mdy_hm(data$litterTimestamp)
data$new_date <- as_date(dt_utc)
# str(data)
#new_time <- strsplit(data$litterTimeStamp, " ")
data$new_time <- as.character(0)
data$new_date <- as.character(0)
data$new_date <- sapply(data$litterTimestamp, first_word)
data$new_time <- sapply(data$litterTimestamp, second_word)
# data$dotw <- weekdays(as.Date(data$new_date))
data$dotw <- wday(data$new_date, label=TRUE, abbr=FALSE)
head(data)
str(data)
sub <- subset(data, lat > 41.85589 & lat < 41.889 & lon < -87.814 & lon > -87.839)
str(sub)
nrow(sub)
data.table <- as.data.frame(table(data$username))
order.username <- order(data.table$Freq,  decreasing=TRUE)
data.table <- data.table[order.username, ]
colnames(data.table) <- c("Usernames", "Count")
data.table
# table of total number of litter
# ggplot2 bar chart by weekday
data.dotw <- as.data.frame(table(data$dotw))
# order.dotw <- order(data.dotw$Freq, decreasing=TRUE)
# data.dotw <- data.dotw[order.dotw, ]
colnames(data.dotw) <- c("Day of the Week", "Count")
data.dotw
ggplot(data, aes(x=dotw, y="Count")) + geom_bar(stat="identity")
# g <- ggplot(data, aes(dotw))
# g + geom_bar(fill="#0072B2")
# ---------------------------------------------------------------------
# filling_usernames <- function(data) {
#   if (sum(data$username == "")) {
#     for(i in 1:length(data$username))
#     {
#       if (data[i, 10] == "") {
#         data[i, 10] <- paste("unidentified-user-", i)
#       }
#     }
#   }
#   return (data)
# }
#
#
# test_data <- filling_usernames(test_data)
#
# data <- data[complete.cases(data[,5]), ]
# data <- data[rowSums(is.na(data[, 5:6])) == 0, ]
first_word <- function(my.string) {
unlist(strsplit(my.string, ' '))[1]
}
second_word <- function(my.string) {
unlist(strsplit(my.string, ' '))[2]
}
str(data[['tags']])
summary(data[,5:6])
# median: lat = 41.87, lon = -87.81
#
# str(data)
# data$username <-
sum(data$username == "")
sum(data$tags == "")
runApp()
# -----------------------------------------------------------------------------
ui <- dashboardPage(
dashboardHeader(title = "CS 424 - Project 1"),
dashboardSidebar(
sidebarMenu(
menuItem("", tabName="Empty", icon=NULL),
menuItem("", tabName="Empty", icon=NULL),
)
),
dashboardBody(
fluidRow(
column(3,
fluidRow(
box(title="Map", solidHeader = TRUE, status="primary", width=250,
leafletOutput("map", height=250)
)
),
),
fluidRow(
box(title="Top 10 Table", solidHeader=TRUE, status="primary", width=12,
dataTableOutput("topTenTable", height=200))
),
fluidRow(
box(title="Litter by day", solidHeader=TRUE, status="primary", width=12,
plotOutput("hist_dotw", height=200))
)
)
# leafletOutput("map"),
)
)
# -----------------------------------------------------------------------------
ui <- dashboardPage(
dashboardHeader(title = "CS 424 - Project 1"),
dashboardSidebar(
sidebarMenu(
menuItem("", tabName="Empty", icon=NULL),
menuItem("", tabName="Empty", icon=NULL),
menuItem("", tabName="Empty", icon=NULL),
menuItem("", tabName="Empty", icon=NULL),
menuItem("", tabName="Empty", icon=NULL),
menuItem("", tabName="Empty", icon=NULL),
menuItem("", tabName="Empty", icon=NULL),
menuItem("", tabName="Empty", icon=NULL),
selectInput("Username", "Select a picker:", username, )
)
),
dashboardBody(
fluidRow(
column(3,
fluidRow(
box(title="Map", solidHeader = TRUE, status="primary", width=250,
leafletOutput("map", height=250)
)
),
),
fluidRow(
box(title="Top 10 Table", solidHeader=TRUE, status="primary", width=12,
dataTableOutput("topTenTable", height=200))
),
fluidRow(
box(title="Litter by day", solidHeader=TRUE, status="primary", width=12,
plotOutput("hist_dotw", height=200))
)
)
# leafletOutput("map"),
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(data, aes(x=dotw, y="Count")) + geom_bar(stat="identity")
library(leaflet)
library(shiny)
library(lubridate)
library(DT)
library(ggplot2)
# runExample("01_hello")
# setwd('School Folders/cs424/project_1')
# dir()
# write.csv(data, "fin_data.csv")
data = read.csv("proj_1_raw.csv", header=TRUE, dec=',')
str(data)
data$lat <- as.numeric(as.character(data$lat))
data$lon <- as.numeric(as.character(data$lon))
data$tags <- sub("", "untagged", data$tags) # convert to char
data$litterTimestamp <- as.character(data$litterTimestamp) # convert to char
dt_utc <- mdy_hm(data$litterTimestamp)
data$new_date <- as_date(dt_utc)
# str(data)
#new_time <- strsplit(data$litterTimeStamp, " ")
data$new_time <- as.character(0)
data$new_date <- as.character(0)
data$new_date <- sapply(data$litterTimestamp, first_word)
data$new_time <- sapply(data$litterTimestamp, second_word)
# data$dotw <- weekdays(as.Date(data$new_date))
data$dotw <- wday(data$new_date, label=TRUE, abbr=FALSE)
head(data)
str(data)
sub <- subset(data, lat > 41.85589 & lat < 41.889 & lon < -87.814 & lon > -87.839)
str(sub)
nrow(sub)
data.table <- as.data.frame(table(data$username))
order.username <- order(data.table$Freq,  decreasing=TRUE)
data.table <- data.table[order.username, ]
colnames(data.table) <- c("Usernames", "Count")
data.table
# table of total number of litter
# ggplot2 bar chart by weekday
data.dotw <- as.data.frame(table(data$dotw))
# order.dotw <- order(data.dotw$Freq, decreasing=TRUE)
# data.dotw <- data.dotw[order.dotw, ]
colnames(data.dotw) <- c("Day of the Week", "Count")
data.dotw
ggplot(data, aes(x=dotw, y="Count")) + geom_bar(stat="identity")
# g <- ggplot(data, aes(dotw))
# g + geom_bar(fill="#0072B2")
#
# ---------------------------------------------------------------------
# filling_usernames <- function(data) {
#   if (sum(data$username == "")) {
#     for(i in 1:length(data$username))
#     {
#       if (data[i, 10] == "") {
#         data[i, 10] <- paste("unidentified-user-", i)
#       }
#     }
#   }
#   return (data)
# }
#
#
# test_data <- filling_usernames(test_data)
#
# data <- data[complete.cases(data[,5]), ]
# data <- data[rowSums(is.na(data[, 5:6])) == 0, ]
ggplot(data, aes(x=dotw, y="Count")) + geom_bar(stat="identity")
uniq_tags <- rapply(data, function(x)length(unique(x)))
uniq_tags
uniq_tags <- rapply(data$tags, function(x)unique(x))
uniq_tags
uniq_tags <- rapply(data$tags, function(x)length(unique(x)))
uniq_tags
uniq_tags <- rapply(data$tags, function(x)length(unique(x)))
uniq_tags
uniq_tags <- length(unique(data$tags))
uniq_tags
uniq_tags <- unique(data$tags)
uniq_tags
data = read.csv("proj_1_raw.csv", header=TRUE, dec=',')
data$tags <- sub(is.empty, "untagged", data$tags) # convert to char
data$tags[nchar(data$tags) == 0] <- "untagged"
data$lat <- as.numeric(as.character(data$lat))
data$lon <- as.numeric(as.character(data$lon))
data$tags <- as.character(data$tags)
str(data)
data$tags[nchar(data$tags) == 0] <- "untagged"
uniq_tags <- unique(data$tags)
uniq_tags
write.csv(data, "fin1_data.csv")
uniq_tags <- data$tags
uniq_tags
uniq_string
uniq_string <- paste(data$tags)
uniq_string
uniq_string
uniq_tags <- unique(data$tags)
uniq_string <- paste(data$tags)
uniq_string
uniq_tags <- unique(data$tags)
uniq_string <- paste(uniq_tags)
uniq_string
uniq_string
uniq_tags <- unique(data$tags)
uniq_string <- paste(uniq_tags, sep=" ")
uniq_string
uniq_tags <- unique(data$tags)
uniq_string <- paste(uniq_tags, sep=" ")
uniq_list <- as.list(strsplit(uniq_string, ","))
uniq_list <- as.list(strsplit(uniq_string, " "))
uniq_list
uniq_tags <- unique(data$tags)
df_args <- c(uniq_tags, sep=" ")
do.call(paste, df_args)
df_args
uniq_tags <- unique(data$tags)
df_args <- c(uniq_tags, sep=" ")
do.call(paste, df_args)
gsub(" ", ",", df_args)
# df_args <- strsplit(df_args, " ")[[1]]
df_args
uniq_tags <- unique(data$tags)
df_args <- c(uniq_tags, sep=" ")
do.call(paste, df_args)
gsub(" ", ",", df_args)
df_args <- strsplit(df_args, " ")[[1]]
df_args
uniq_tags <- unique(data$tags)
df_args <- c(uniq_tags, sep=" ")
do.call(paste, df_args)
gsub(" ", ",", df_args)
df_args <- strsplit(df_args, ",")[[1]]
df_args
uniq_tags <- unique(data$tags)
df_args <- c(uniq_tags, sep=" ")
do.call(paste, df_args)
gsub(" ", ",", df_args)
df_args <- strsplit(df_args, ",")
df_args
uniq_tags <- unique(data$tags)
df_args <- c(uniq_tags, sep=" ")
do.call(paste, df_args)
# gsub(" ", ",", df_args)
# df_args <- strsplit(df_args, ",")[[1]]
df_args
uniq_tags <- unique(data$tags)
uniq_tags
uniq_tags[[1000]]
library(stringr)
str_detect(uniq_tags[[1000]], "piece")
str_detect(uniq_tags[[1000]], "untagged")
str(data$tags)
summary(data$tags)
uniq_string <- paste(unlist(as.list(uniq_tags)), collape=" ")
uniq_string
uniq_string <- paste(unlist(uniq_tags), collape=" ")
uniq_string
uniq_string <- paste(unlist(uniq_tags), collape="")
uniq_string
uniq_string <- paste(unlist(uniq_tags), collape="R")
uniq_string
uniq_list <- as.list(uniq_tags)
uniq_string <- paste(unlist(uniq_list), collape="")
uniq_string
uniq_tags <- unique(data$tags)
uniq_list <- as.list(uniq_tags)
uniq_string <- paste(unlist(uniq_list), collape="?")
uniq_string
uniq_list <- as.list(uniq_tags)
uniq_string <- paste(unlist(uniq_list), sep=" ")
uniq_string
uniq_tags <- unique(data$tags)
uniq_list <- as.list(uniq_tags)
uniq_string <- paste(uniq_list, collapse='')
uniq_string
uniq_string <- paste(uniq_list, collapse=' ')
uniq_string
uniq_tags <- unique(data$tags)
uniq_list <- as.list(uniq_tags)
uniq_string <- paste(uniq_list, collapse=' ')
uniq_string <- gsub(" ", ",", uniq_string)
uniq_string
uniq_tags <- unique(data$tags)
uniq_list <- as.list(uniq_tags)
uniq_string <- paste(uniq_list, collapse=' ')
uniq_string <- gsub(" ", ",", uniq_string)
uniq_v <- strsplit(uniq_string, ",")
uniq_v
str(uniq_v)
uniq_v <- as.data.frame(uniq_v)
str(uniq_v)
table(uniq_v)
freq_tags <- as.data.frame(table(uniq_v))
freq_tags
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
uniq_tags <- unique(data$tags)
uniq_list <- as.list(uniq_tags)
uniq_string <- paste(uniq_list, collapse=' ')
uniq_string <- gsub(" ", ",", uniq_string)
uniq_v <- strsplit(uniq_string, ",")
uniq_v <- as.data.frame(uniq_v)
freq_tags <- as.data.frame(table(uniq_v))
order.tag <- order(freq_tags$Freq, decreasing=TRUE)
freq_tags <- freq_tags[order.tag, ]
colnames(freq_tags) <- c("Tag", "Count")
freq_tags
freq_tags[[1]]
runApp()
freq_tags
freq_tags[[1]]
str(freq_tags)
freq_tags[[1]]
freq_tags[[2]]
freq_tags[1]
freq_tags
runApp()
runApp()
runApp()
head(freq_tags)
runApp()
runApp()
freq_tags <- datatable(freq_tags)
head(freq_tags)
runApp()
head(freq_tags)
freq_tags <- freq_tags[order.tag, ]
colnames(freq_tags) <- c("Tag", "Count")
head(freq_tags)
head(freq_tags)
uniq_tags <- unique(data$tags)
uniq_list <- as.list(uniq_tags)
uniq_string <- paste(uniq_list, collapse=' ')
uniq_string <- gsub(" ", ",", uniq_string)
uniq_v <- strsplit(uniq_string, ",")
uniq_v <- as.data.frame(uniq_v)
freq_tags <- as.data.frame(table(uniq_v))
order.tag <- order(freq_tags$Freq, decreasing=TRUE)
freq_tags <- freq_tags[order.tag, ]
colnames(freq_tags) <- c("Tag", "Count")
head(freq_tags)
runApp()
datatable(freq_tags)
runApp()
str(freq_tags)
runApp()
uniq_tags <- unique(data$tags)
uniq_list <- as.list(uniq_tags)
uniq_string <- paste(uniq_list, collapse=' ')
uniq_string <- gsub(" ", ",", uniq_string)
uniq_v <- strsplit(uniq_string, ",")
uniq_v <- as.data.frame(uniq_v)
freq_tags <- as.data.frame(table(uniq_v))
order.tag <- order(freq_tags$Freq, decreasing=TRUE)
freq_tags <- freq_tags[order.tag, ]
colnames(freq_tags) <- c("Tag", "Count")
as.character(freq_tags[1])
head(freq_tags)
str(freq_tags)
str(freq_tags[1])
head(freq_tags)
runApp()
runApp()
View(freq_tags)
runApp()
freq_tags
str(freq_tags)
uniq_tags <- unique(data$tags)
uniq_list <- as.list(uniq_tags)
uniq_string <- paste(uniq_list, collapse=' ')
uniq_string <- gsub(" ", ",", uniq_string)
uniq_v <- strsplit(uniq_string, ",")
uniq_v <- as.data.frame(uniq_v)
freq_tags <- data.frame(table(uniq_v))
order.tag <- order(freq_tags$Freq, decreasing=TRUE)
freq_tags <- freq_tags[order.tag, ]
colnames(freq_tags) <- c("Tag", "Count")
as.character(freq_tags[1])
head(freq_tags)
runApp()
runApp()
runApp()
runApp()
uniq_tags <- unique(data$tags)
uniq_list <- as.list(uniq_tags)
uniq_string <- paste(uniq_list, collapse=' ')
uniq_string <- gsub(" ", ",", uniq_string)
uniq_v <- strsplit(uniq_string, ",")
freq_tags <- as.data.frame(table(uniq_v))
order.tag <- order(freq_tags$Freq, decreasing=TRUE)
freq_tags <- freq_tags[order.tag, ]
colnames(freq_tags) <- c("Tag", "Count")
as.character(freq_tags[1])
head(freq_tags)
